(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{525:function(s,a,t){"use strict";t.r(a);var e=t(2),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"git基础与命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git基础与命令"}},[s._v("#")]),s._v(" Git基础与命令")]),s._v(" "),t("p",[s._v("官方文档（中文）：https://git-scm.com/book/zh/v2")]),s._v(" "),t("blockquote",[t("p",[s._v("本文档是根据官方文档来编写的，以官方文档为准。")])]),s._v(" "),t("h2",{attrs:{id:"git基础"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git基础"}},[s._v("#")]),s._v(" Git基础")]),s._v(" "),t("h3",{attrs:{id:"全局配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#全局配置"}},[s._v("#")]),s._v(" "),t("a",{attrs:{href:"https://xugaoyi.com/pages/635088/#%E5%85%A8%E5%B1%80%E9%85%8D%E7%BD%AE",target:"_blank",rel:"noopener noreferrer"}},[s._v("#"),t("OutboundLink")],1),s._v("全局配置")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global user.name "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'your name'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" config --global user.email "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xxx@xx.com'")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h3",{attrs:{id:"生成ssh-key的私钥和公钥"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#生成ssh-key的私钥和公钥"}},[s._v("#")]),s._v(" 生成ssh-key的私钥和公钥")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("ssh-keygen -t rsa      //一路回车下来\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("注：Windows下使用git bash操作命令行。")]),s._v(" "),t("h3",{attrs:{id:"检查配置信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#检查配置信息"}},[s._v("#")]),s._v(" 检查配置信息")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git config --list\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"初始化仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#初始化仓库"}},[s._v("#")]),s._v(" 初始化仓库")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 本地目录初始化仓库\ngit init\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("如果你是从远程仓库clone的项目，则该项目是已经初始化好的git仓库")]),s._v(" "),t("h3",{attrs:{id:"克隆远程仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#克隆远程仓库"}},[s._v("#")]),s._v(" 克隆远程仓库")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 克隆\ngit clone <url>\n\n# 克隆同时修改目录名\ngit clone <url> <name>\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("初次克隆某个仓库的时候，工作目录中的所有文件都属于已跟踪文件，并处于未修改状态，因为 Git 刚刚检出了它们， 而你尚未编辑过它们")]),s._v(" "),t("h3",{attrs:{id:"检查文件状态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#检查文件状态"}},[s._v("#")]),s._v(" 检查文件状态")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 查看详细状态说明\ngit status\n\n# 查看简明状态说明\ngit status -s  # -s 或 --short\n M README # 已修改，但未暂存 （M的位置靠右，红色）\nMM Rakefile # 已修改，暂存后又作了修改（有暂存和未暂存）\nA  lib/git.rb # 新添加到暂存区，未提交\nM  lib/simplegit.rb # 已修改，已暂存 （M的位置靠左，绿色）\n?? LICENSE.txt # 新添加，未跟踪\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("ul",[t("li",[s._v("git目录中的文件状态包含：是否跟踪、是否修改、是否已存入暂存区")]),s._v(" "),t("li",[s._v("参数的"),t("strong",[s._v("一个横杠表示缩写，两个横杠表示全称。")])])]),s._v(" "),t("h3",{attrs:{id:"加入暂存区-跟踪文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#加入暂存区-跟踪文件"}},[s._v("#")]),s._v(" 加入暂存区 (跟踪文件)")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 文件加入暂存区（跟踪指定文件)\ngit add <files>\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[t("code",[s._v("git add")]),s._v(" 命令使用文件或目录的路径作为参数；如果参数是目录的路径，该命令将递归地跟踪该目录下的所有文件。")]),s._v(" "),t("p",[t("code",[s._v("add")]),s._v(" 命令是将文件"),t("strong",[s._v("加入")]),s._v("到"),t("strong",[s._v("暂存区")]),s._v("，"),t("code",[s._v("commit")]),s._v(" 命令的"),t("strong",[s._v("提交")]),s._v("到"),t("strong",[s._v("本地仓库")]),s._v("，"),t("code",[s._v("push")]),s._v(" 命令是"),t("strong",[s._v("推送")]),s._v("到"),t("strong",[s._v("远程仓库")]),s._v("。")]),s._v(" "),t("h3",{attrs:{id:"忽略文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#忽略文件"}},[s._v("#")]),s._v(" 忽略文件")]),s._v(" "),t("p",[s._v("添加一个名为 "),t("code",[s._v(".gitignore")]),s._v(" 的文件，列出要忽略的文件的模式")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("*."),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("oa"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 忽略以 .o 或 .a 结尾的文件（一般这类文件是编译过程出现）")]),s._v("\n*~      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 忽略以 ~ 结尾的文件（一般是文本编辑软件保存的副本）")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("文件 "),t("code",[s._v(".gitignore")]),s._v(" 的"),t("strong",[s._v("格式规范")]),s._v("如下：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("所有空行或者以 "),t("code",[s._v("#")]),s._v(" 开头的行都会被 Git 忽略（注释符号）。")])]),s._v(" "),t("li",[t("p",[s._v("可以使用标准的 glob 模式匹配，它会递归地应用在整个工作区中。")]),s._v(" "),t("blockquote",[t("p",[s._v("glob 模式是指 shell 所使用的简化了的正则表达式")])])]),s._v(" "),t("li",[t("p",[s._v("匹配模式可以以（"),t("code",[s._v("/")]),s._v("）开头防止递归。")])]),s._v(" "),t("li",[t("p",[s._v("匹配模式可以以（"),t("code",[s._v("/")]),s._v("）结尾指定目录。")])]),s._v(" "),t("li",[t("p",[s._v("要忽略指定模式以外的文件或目录，可以在模式前加上叹号（"),t("code",[s._v("!")]),s._v("）取反。")])])]),s._v(" "),t("hr"),s._v(" "),t("p",[s._v("GitHub 有一个十分详细的针对数十种项目及语言的 "),t("code",[s._v(".gitignore")]),s._v(" 文件列表， 你可以在 https://github.com/github/gitignore 找到它。")]),s._v(" "),t("h3",{attrs:{id:"提交更新"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#提交更新"}},[s._v("#")]),s._v(" 提交更新")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git commit # 未带参数的会打开默认文本编辑器让你输入提交说明\n\ngit commit -m '提交说明' # 带-m参数直接输入提交说明\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("使用"),t("code",[s._v("git commit")]),s._v("提交更新，在此之前，务必确认所有变动已经被"),t("code",[s._v("git add")]),s._v("添加到暂存区。")]),s._v(" "),t("h3",{attrs:{id:"跳过使用暂存区域"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#跳过使用暂存区域"}},[s._v("#")]),s._v(" 跳过使用暂存区域")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -a -m "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'提交说明'")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("添加"),t("code",[s._v("-a")]),s._v("选项可以跳过"),t("code",[s._v("git add")]),s._v(" 步骤，把已经跟踪过的文件一并提交。")]),s._v(" "),t("p",[s._v("注意：这个操作"),t("strong",[s._v("无法提交未跟踪")]),s._v("的文件。")])])}),[],!1,null,null,null);a.default=n.exports}}]);